{"version":3,"file":"static/js/418.638fb8c0.chunk.js","mappings":"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","sources":["shared/components/FormElements/ImageUpload.js","shared/components/UIElements/Card.js","user/pages/Auth.js"],"sourcesContent":["import React,{useRef, useState, useEffect} from 'react';\r\nimport './ImageUpload.css';\r\nimport Button from './Button';\r\n\r\n\r\nconst ImageUpload = (props) => {\r\n    const filePickerRef = useRef();\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setValid] = useState(false);\r\n\r\n    useEffect (()=>{\r\n        if(!file){\r\n            return;\r\n        }\r\n        \r\n        const fileReader = new FileReader();\r\n        fileReader.onload = (e)=>{\r\n            const { result } = e.target;\r\n            if (result) {\r\n                setPreviewUrl(result)\r\n            }\r\n        };\r\n        fileReader.readAsDataURL(file)\r\n    },[file])\r\n    const pickHandler = event =>{\r\n        let pickedFile;\r\n        let fileisValid = isValid;\r\n        \r\n        if(event.target.files && event.target.files.length === 1){\r\n            console.log(event.target.files[0])\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setValid(true);\r\n            fileisValid = true\r\n        }\r\n        else{\r\n            setValid(false);\r\n            fileisValid = false\r\n        }\r\n        \r\n        props.onInput(props.id,pickedFile, fileisValid )\r\n    }\r\n    const pickImageHandler = ()=>{\r\n        filePickerRef.current.click();\r\n\r\n    }\r\n  return (\r\n    <>\r\n        <div className=\"form-control\">\r\n            <input id={props.id} ref={filePickerRef}\r\n             style={{display:'none'}} type=\"file\" accept=\".jpg,.png,.jpeg\"\r\n             onChange={pickHandler}\r\n             />\r\n        \r\n        </div>\r\n        <div className={`image-upload ${props.center && 'center'}`}>\r\n            <div className='image-upload__preview'>\r\n                {previewUrl && <img src={previewUrl} alt=\"Preview\"/>}\r\n                {!previewUrl && <p>Please pick an Image</p>}\r\n            </div>\r\n\r\n            <Button type=\"button\" onClick={pickImageHandler}>PICK Image</Button>\r\n            {!isValid && <p>{props.errorText}</p>}\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImageUpload","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image:undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n \n    if (isLoginMode) {\n      try{\n    \n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL+'/api/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),{\n                      \n            'Content-Type': 'application/json'\n          \n          }\n        );\n          console.log(responseData)\n        auth.login(responseData.userId,responseData.token);\n      }catch(err){\n\n      }\n\n  \n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email',formState.inputs.email.value )\n        formData.append('name',formState.inputs.name.value )\n        formData.append('password',formState.inputs.password.value )\n        formData.append('image',formState.inputs.image.value )\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/users/signup`, \n          'POST',\n          formData,\n          \n          \n        );\n        console.log(responseData)\n        auth.login(responseData.userId,responseData.token);\n      } catch (err) {\n\n      }\n    }\n\n  };\n\n\n  return (\n    <>\n    <ErrorModal error={error} onClear={clearError}/>\n    <Card className=\"authentication\">\n      {isLoading && <LoadingSpinner asOverlay/>}\n      <h2>Login Required</h2>\n      <hr />\n      <form onSubmit={authSubmitHandler}>\n        {!isLoginMode && (\n          <Input\n            element=\"input\"\n            id=\"name\"\n            type=\"text\"\n            label=\"Your Name\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a name.\"\n            onInput={inputHandler}\n          />\n        )}\n        {!isLoginMode && (\n          <ImageUpload id=\"image\" center onInput={inputHandler} errorText=\"Please Provide an Image\"/>\n        )}\n        <Input\n          element=\"input\"\n          id=\"email\"\n          type=\"email\"\n          label=\"E-Mail\"\n          validators={[VALIDATOR_EMAIL()]}\n          errorText=\"Please enter a valid email address.\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          validators={[VALIDATOR_MINLENGTH(6)]}\n          errorText=\"Please enter a valid password, at least 6 characters.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n        </Button>\n      </form>\n      <Button inverse onClick={switchModeHandler}>\n        SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n      </Button>\n    </Card>\n    </>\n  );\n};\n\nexport default Auth;\n"],"names":["props","filePickerRef","useRef","_useState","useState","_useState2","_slicedToArray","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","isValid","setValid","useEffect","fileReader","FileReader","onload","e","result","target","readAsDataURL","_jsxs","_Fragment","children","_jsx","className","id","ref","style","display","type","accept","onChange","event","pickedFile","fileisValid","files","length","console","log","onInput","concat","center","src","alt","Button","onClick","current","click","errorText","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useForm","useForm","email","value","password","_useForm2","formState","inputHandler","setFormData","authSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","formData","_responseData","wrap","_context","prev","next","preventDefault","process","JSON","stringify","inputs","sent","login","userId","token","t0","FormData","append","name","image","t1","stop","_x","apply","arguments","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","Input","element","label","validators","VALIDATOR_REQUIRE","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","disabled","inverse","_objectSpread","undefined","prevMode"],"sourceRoot":""}