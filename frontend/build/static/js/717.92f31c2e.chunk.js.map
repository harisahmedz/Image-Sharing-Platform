{"version":3,"file":"static/js/717.92f31c2e.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js"],"sourcesContent":["import React,{useContext} from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './PlaceForm.css';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {useHistory} from 'react-router-dom'\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    console.log(formState.inputs); \n    try{\n      const formData = new FormData();\n      formData.append('title',formState.inputs.title.value)\n      formData.append('description',formState.inputs.description.value)\n      formData.append('address',formState.inputs.address.value)\n      formData.append('image',formState.inputs.image.value)\n\n      await sendRequest(process.env.REACT_APP_BACKEND_URL+'/api/places','POST',\n      formData,\n      {\n        Authorization:'Bearer '+auth.token\n      }\n      )\n      history.push('/');\n    }\n    catch(err){}\n  }\n\n  return (\n    <>\n    <ErrorModal error={error} onClear={clearError}/>\n   \n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n      {isLoading && <LoadingSpinner asOverlay/>}\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"address\"\n        element=\"input\"\n        label=\"Address\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid address.\"\n        onInput={inputHandler}\n      />\n      <ImageUpload id=\"image\" onInput={inputHandler} errorText=\"Please Provide an Image\"/>\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        ADD PLACE\n      </Button>\n    </form>\n    </>\n  );\n};\n\nexport default NewPlace;\n","import React,{useRef, useState, useEffect} from 'react';\r\nimport './ImageUpload.css';\r\nimport Button from './Button';\r\n\r\n\r\nconst ImageUpload = (props) => {\r\n    const filePickerRef = useRef();\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setValid] = useState(false);\r\n\r\n    useEffect (()=>{\r\n        if(!file){\r\n            return;\r\n        }\r\n        \r\n        const fileReader = new FileReader();\r\n        fileReader.onload = (e)=>{\r\n            const { result } = e.target;\r\n            if (result) {\r\n                setPreviewUrl(result)\r\n            }\r\n        };\r\n        fileReader.readAsDataURL(file)\r\n    },[file])\r\n    const pickHandler = event =>{\r\n        let pickedFile;\r\n        let fileisValid = isValid;\r\n        \r\n        if(event.target.files && event.target.files.length === 1){\r\n            console.log(event.target.files[0])\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setValid(true);\r\n            fileisValid = true\r\n        }\r\n        else{\r\n            setValid(false);\r\n            fileisValid = false\r\n        }\r\n        \r\n        props.onInput(props.id,pickedFile, fileisValid )\r\n    }\r\n    const pickImageHandler = ()=>{\r\n        filePickerRef.current.click();\r\n\r\n    }\r\n  return (\r\n    <>\r\n        <div className=\"form-control\">\r\n            <input id={props.id} ref={filePickerRef}\r\n             style={{display:'none'}} type=\"file\" accept=\".jpg,.png,.jpeg\"\r\n             onChange={pickHandler}\r\n             />\r\n        \r\n        </div>\r\n        <div className={`image-upload ${props.center && 'center'}`}>\r\n            <div className='image-upload__preview'>\r\n                {previewUrl && <img src={previewUrl} alt=\"Preview\"/>}\r\n                {!previewUrl && <p>Please pick an Image</p>}\r\n            </div>\r\n\r\n            <Button type=\"button\" onClick={pickImageHandler}>PICK Image</Button>\r\n            {!isValid && <p>{props.errorText}</p>}\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImageUpload"],"names":["auth","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useForm","useForm","title","value","isValid","description","address","image","_useForm2","_slicedToArray","formState","inputHandler","history","useHistory","placeSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","wrap","_context","prev","next","preventDefault","console","log","inputs","FormData","append","process","Authorization","token","push","t0","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","filePickerRef","useRef","_useState","useState","_useState2","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setValid","useEffect","fileReader","FileReader","onload","e","result","target","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileisValid","files","length","concat","center","src","alt","onClick","current","click"],"sourceRoot":""}