{"version":3,"file":"static/js/915.a5d4041d.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/UIElements/Card.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const placeId = useParams().placeId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(()=>{\n    const fetchPlace = async ()=>{\n      try{\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/api/places/${placeId}`);\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n      }catch(err){\n\n      }\n    }\n    fetchPlace();\n  },[sendRequest, placeId,setFormData ])\n\n\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try{\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/api/places/${placeId}`,'PATCH',\n      JSON.stringify({\n        title:formState.inputs.title.value,\n        description:formState.inputs.description.value,\n      }), {'Content-Type': 'application/json',\n            Authorization:'Bearer '+auth.token\n          })\n      history.push('/'+auth.userId+'/places');\n    }\n    catch(err){}\n    // console.log(formState.inputs);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner/>\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n \n\n  return (\n    <>\n    <ErrorModal error={error} onClear={clearError}/>\n    { !isLoading && loadedPlace &&(\n      <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n        initialValue={loadedPlace.title}\n        initialValid={true}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (min. 5 characters).\"\n        onInput={inputHandler}\n        initialValue={loadedPlace.description}\n        initialValid={true}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        UPDATE PLACE\n      </Button>\n    </form>)}\n    </>\n  );\n};\n\nexport default UpdatePlace;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["auth","useContext","AuthContext","placeId","useParams","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useState","useState","_useState2","_slicedToArray","loadedPlace","setLoadedPlace","history","useHistory","_useForm","useForm","title","value","isValid","description","_useForm2","formState","inputHandler","setFormData","useEffect","fetchPlace","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","wrap","_context","prev","next","concat","process","sent","place","t0","stop","apply","arguments","placeUpdateSubmitHandler","_ref2","_callee2","event","_context2","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","_x","_jsx","className","children","LoadingSpinner","_jsxs","_Fragment","ErrorModal","onClear","onSubmit","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","props","style"],"sourceRoot":""}